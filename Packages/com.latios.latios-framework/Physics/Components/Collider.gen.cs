//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     TextTransform Collider.tt
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using Unity.Collections.LowLevel.Unsafe;
using Unity.Entities;
using Unity.Mathematics;

namespace Latios.PhysicsEngine
{
    public unsafe partial struct Collider : IComponentData
    {
        #region TypeCasting
        public unsafe static implicit operator Collider(SphereCollider sphereCollider)
        {
            Collider collider = default;
            collider.m_type   = ColliderType.Sphere;
            collider.m_sphere = sphereCollider;
            return collider;
        }

        public unsafe static implicit operator SphereCollider(Collider collider)
        {
#if ENABLE_UNITY_COLLECTIONS_CHECKS
            if (collider.m_type != ColliderType.Sphere)
                throw new InvalidOperationException("Error: Collider is not a SpphereCollider but is being casted to one.");
#endif

            return collider.m_sphere;
        }

        public unsafe static implicit operator Collider(CapsuleCollider capsuleCollider)
        {
            Collider collider  = default;
            collider.m_type    = ColliderType.Capsule;
            collider.m_capsule = capsuleCollider;
            return collider;
        }

        public unsafe static implicit operator CapsuleCollider(Collider collider)
        {
#if ENABLE_UNITY_COLLECTIONS_CHECKS
            if (collider.m_type != ColliderType.Capsule)
                throw new InvalidOperationException("Error: Collider is not a CapsuleCollider but is being casted to one.");
#endif

            return collider.m_capsule;
        }

        public unsafe static implicit operator Collider(CompoundCollider compoundCollider)
        {
            Collider collider      = default;
            collider.m_type        = ColliderType.Compound;
            collider.m_storage.a.x = compoundCollider.scale;
            collider.m_blobRef     = compoundCollider.compoundColliderBlob;
            return collider;
        }

        public unsafe static implicit operator CompoundCollider(Collider collider)
        {
#if ENABLE_UNITY_COLLECTIONS_CHECKS
            if (collider.m_type != ColliderType.Compound)
                throw new InvalidOperationException("Error: Collider is not a CompoundCollider but is being casted to one.");
#endif
            return new CompoundCollider(collider.m_blobRef, collider.m_storage.a.x);
        }

        #endregion TypeCasting
    }
}

